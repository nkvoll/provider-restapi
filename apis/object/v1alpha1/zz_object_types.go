/*
Copyright 2023 Njal Karevoll.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ObjectInitParameters struct {

	// resource override of create_method (see create_method provider config documentation)
	// Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method` provider config documentation)
	CreateMethod *string `json:"createMethod,omitempty" tf:"create_method,omitempty"`

	// (String) Defaults to path. The API path that represents where to CREATE (POST) objects of this type on the API server.
	// Defaults to `path`. The API path that represents where to CREATE (POST) objects of this type on the API server.
	CreatePath *string `json:"createPath,omitempty" tf:"create_path,omitempty"`

	// (String) Query string to be included in the path when creating the resource.
	// Query string to be included in the path
	CreateQueryString *string `json:"createQueryString,omitempty" tf:"create_query_string,omitempty"`

	// (String) Valid JSON object that this provider will manage with the API server.
	// Valid JSON object that this provider will manage with the API server.
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	// (Boolean) Whether to emit verbose debug output while working with the API object on the server.
	// Whether to emit verbose debug output while working with the API object on the server.
	Debug *bool `json:"debug,omitempty" tf:"debug,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	DeleteQueryString *string `json:"deleteQueryString,omitempty" tf:"delete_query_string,omitempty"`

	// (String) Valid JSON object to pass during to destroy requests.
	// Valid JSON object to pass during to destroy requests.
	DestroyData *string `json:"destroyData,omitempty" tf:"destroy_data,omitempty"`

	// resource override of destroy_method (see destroy_method provider config documentation)
	// Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method` provider config documentation)
	DestroyMethod *string `json:"destroyMethod,omitempty" tf:"destroy_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to DESTROY (DELETE) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to DESTROY (DELETE) objects of this type on the API server.
	DestroyPath *string `json:"destroyPath,omitempty" tf:"destroy_path,omitempty"`

	// An object that matches the structure of the data to which remote changes will be considered when detecting drift. Default to the empty object which means all changes are included.
	DriftFields *string `json:"driftFields,omitempty" tf:"drift_fields,omitempty"`

	// (String) Valid JSON object that this provider will manage with the API server.
	// Set this to 'true' to use the data as drift fields to make only explicitly set fields are checked for drift. Default: false
	DriftFieldsFromData *bool `json:"driftFieldsFromData,omitempty" tf:"drift_fields_from_data,omitempty"`

	// (List of String) Any changes to these values will result in recreating the resource instead of updating.
	// Any changes to these values will result in recreating the resource instead of updating.
	ForceNew []*string `json:"forceNew,omitempty" tf:"force_new,omitempty"`

	// resource override of id_attribute (see id_attribute provider config documentation)
	// Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute` provider config documentation)
	IDAttribute *string `json:"idAttribute,omitempty" tf:"id_attribute,omitempty"`

	// Set this to 'true' to ignore any remote changes. Default: false
	IgnoreAllServerChanges *bool `json:"ignoreAllServerChanges,omitempty" tf:"ignore_all_server_changes,omitempty"`

	// A list of fields to which remote changes will be ignored. To ignore changes to nested fields, use the dot syntax: 'metadata.timestamp'
	IgnoreChangesTo []*string `json:"ignoreChangesTo,omitempty" tf:"ignore_changes_to,omitempty"`

	// (String) Defaults to the id learned by the provider during normal operations and id_attribute. Allows you to set the id manually. This is used in conjunction with the *_path attributes.
	// Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id manually. This is used in conjunction with the `*_path` attributes.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// (String) The API path on top of the base URL set in the provider that represents objects of this type on the API server.
	// The API path on top of the base URL set in the provider that represents objects of this type on the API server.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	QueryString *string `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// resource override of read_method (see read_method provider config documentation)
	// Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider config documentation)
	ReadMethod *string `json:"readMethod,omitempty" tf:"read_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to READ (GET) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to READ (GET) objects of this type on the API server.
	ReadPath *string `json:"readPath,omitempty" tf:"read_path,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	ReadQueryString *string `json:"readQueryString,omitempty" tf:"read_query_string,omitempty"`

	// (Map of String) Custom search for read_path. This map will take search_key, search_value, results_key and query_string (see datasource config documentation)
	// Custom search for `read_path`. This map will take `search_key`, `search_value`, `results_key` and `query_string` (see datasource config documentation)
	ReadSearch map[string]*string `json:"readSearch,omitempty" tf:"read_search,omitempty"`

	// (String) Valid JSON object to pass during to update requests.
	// Valid JSON object to pass during to update requests.
	UpdateData *string `json:"updateData,omitempty" tf:"update_data,omitempty"`

	// resource override of update_method (see update_method provider config documentation)
	// Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method` provider config documentation)
	UpdateMethod *string `json:"updateMethod,omitempty" tf:"update_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to UPDATE (PUT) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to UPDATE (PUT) objects of this type on the API server.
	UpdatePath *string `json:"updatePath,omitempty" tf:"update_path,omitempty"`

	// (String) Query string to be included in the path when updating the resource.
	// Query string to be included in the path
	UpdateQueryString *string `json:"updateQueryString,omitempty" tf:"update_query_string,omitempty"`
}

type ObjectObservation struct {

	// resource override of create_method (see create_method provider config documentation)
	// Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method` provider config documentation)
	CreateMethod *string `json:"createMethod,omitempty" tf:"create_method,omitempty"`

	// (String) Defaults to path. The API path that represents where to CREATE (POST) objects of this type on the API server.
	// Defaults to `path`. The API path that represents where to CREATE (POST) objects of this type on the API server.
	CreatePath *string `json:"createPath,omitempty" tf:"create_path,omitempty"`

	// (String) Query string to be included in the path when creating the resource.
	// Query string to be included in the path
	CreateQueryString *string `json:"createQueryString,omitempty" tf:"create_query_string,omitempty"`

	// (String) Valid JSON object that this provider will manage with the API server.
	// Valid JSON object that this provider will manage with the API server.
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	// (Boolean) Whether to emit verbose debug output while working with the API object on the server.
	// Whether to emit verbose debug output while working with the API object on the server.
	Debug *bool `json:"debug,omitempty" tf:"debug,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	DeleteQueryString *string `json:"deleteQueryString,omitempty" tf:"delete_query_string,omitempty"`

	// (String) Valid JSON object to pass during to destroy requests.
	// Valid JSON object to pass during to destroy requests.
	DestroyData *string `json:"destroyData,omitempty" tf:"destroy_data,omitempty"`

	// resource override of destroy_method (see destroy_method provider config documentation)
	// Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method` provider config documentation)
	DestroyMethod *string `json:"destroyMethod,omitempty" tf:"destroy_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to DESTROY (DELETE) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to DESTROY (DELETE) objects of this type on the API server.
	DestroyPath *string `json:"destroyPath,omitempty" tf:"destroy_path,omitempty"`

	// An object that matches the structure of the data to which remote changes will be considered when detecting drift. Default to the empty object which means all changes are included.
	DriftFields *string `json:"driftFields,omitempty" tf:"drift_fields,omitempty"`

	// (String) Valid JSON object that this provider will manage with the API server.
	// Set this to 'true' to use the data as drift fields to make only explicitly set fields are checked for drift. Default: false
	DriftFieldsFromData *bool `json:"driftFieldsFromData,omitempty" tf:"drift_fields_from_data,omitempty"`

	// (List of String) Any changes to these values will result in recreating the resource instead of updating.
	// Any changes to these values will result in recreating the resource instead of updating.
	ForceNew []*string `json:"forceNew,omitempty" tf:"force_new,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// resource override of id_attribute (see id_attribute provider config documentation)
	// Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute` provider config documentation)
	IDAttribute *string `json:"idAttribute,omitempty" tf:"id_attribute,omitempty"`

	// Set this to 'true' to ignore any remote changes. Default: false
	IgnoreAllServerChanges *bool `json:"ignoreAllServerChanges,omitempty" tf:"ignore_all_server_changes,omitempty"`

	// A list of fields to which remote changes will be ignored. To ignore changes to nested fields, use the dot syntax: 'metadata.timestamp'
	IgnoreChangesTo []*string `json:"ignoreChangesTo,omitempty" tf:"ignore_changes_to,omitempty"`

	// (String) Defaults to the id learned by the provider during normal operations and id_attribute. Allows you to set the id manually. This is used in conjunction with the *_path attributes.
	// Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id manually. This is used in conjunction with the `*_path` attributes.
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// (String) The API path on top of the base URL set in the provider that represents objects of this type on the API server.
	// The API path on top of the base URL set in the provider that represents objects of this type on the API server.
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	QueryString *string `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// resource override of read_method (see read_method provider config documentation)
	// Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider config documentation)
	ReadMethod *string `json:"readMethod,omitempty" tf:"read_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to READ (GET) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to READ (GET) objects of this type on the API server.
	ReadPath *string `json:"readPath,omitempty" tf:"read_path,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	ReadQueryString *string `json:"readQueryString,omitempty" tf:"read_query_string,omitempty"`

	// (Map of String) Custom search for read_path. This map will take search_key, search_value, results_key and query_string (see datasource config documentation)
	// Custom search for `read_path`. This map will take `search_key`, `search_value`, `results_key` and `query_string` (see datasource config documentation)
	ReadSearch map[string]*string `json:"readSearch,omitempty" tf:"read_search,omitempty"`

	// (String) Valid JSON object to pass during to update requests.
	// Valid JSON object to pass during to update requests.
	UpdateData *string `json:"updateData,omitempty" tf:"update_data,omitempty"`

	// resource override of update_method (see update_method provider config documentation)
	// Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method` provider config documentation)
	UpdateMethod *string `json:"updateMethod,omitempty" tf:"update_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to UPDATE (PUT) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to UPDATE (PUT) objects of this type on the API server.
	UpdatePath *string `json:"updatePath,omitempty" tf:"update_path,omitempty"`

	// (String) Query string to be included in the path when updating the resource.
	// Query string to be included in the path
	UpdateQueryString *string `json:"updateQueryString,omitempty" tf:"update_query_string,omitempty"`
}

type ObjectParameters struct {

	// resource override of create_method (see create_method provider config documentation)
	// Defaults to `create_method` set on the provider. Allows per-resource override of `create_method` (see `create_method` provider config documentation)
	// +kubebuilder:validation:Optional
	CreateMethod *string `json:"createMethod,omitempty" tf:"create_method,omitempty"`

	// (String) Defaults to path. The API path that represents where to CREATE (POST) objects of this type on the API server.
	// Defaults to `path`. The API path that represents where to CREATE (POST) objects of this type on the API server.
	// +kubebuilder:validation:Optional
	CreatePath *string `json:"createPath,omitempty" tf:"create_path,omitempty"`

	// (String) Query string to be included in the path when creating the resource.
	// Query string to be included in the path
	// +kubebuilder:validation:Optional
	CreateQueryString *string `json:"createQueryString,omitempty" tf:"create_query_string,omitempty"`

	// (String) Valid JSON object that this provider will manage with the API server.
	// Valid JSON object that this provider will manage with the API server.
	// +kubebuilder:validation:Optional
	Data *string `json:"data,omitempty" tf:"data,omitempty"`

	// (Boolean) Whether to emit verbose debug output while working with the API object on the server.
	// Whether to emit verbose debug output while working with the API object on the server.
	// +kubebuilder:validation:Optional
	Debug *bool `json:"debug,omitempty" tf:"debug,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	// +kubebuilder:validation:Optional
	DeleteQueryString *string `json:"deleteQueryString,omitempty" tf:"delete_query_string,omitempty"`

	// (String) Valid JSON object to pass during to destroy requests.
	// Valid JSON object to pass during to destroy requests.
	// +kubebuilder:validation:Optional
	DestroyData *string `json:"destroyData,omitempty" tf:"destroy_data,omitempty"`

	// resource override of destroy_method (see destroy_method provider config documentation)
	// Defaults to `destroy_method` set on the provider. Allows per-resource override of `destroy_method` (see `destroy_method` provider config documentation)
	// +kubebuilder:validation:Optional
	DestroyMethod *string `json:"destroyMethod,omitempty" tf:"destroy_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to DESTROY (DELETE) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to DESTROY (DELETE) objects of this type on the API server.
	// +kubebuilder:validation:Optional
	DestroyPath *string `json:"destroyPath,omitempty" tf:"destroy_path,omitempty"`

	// An object that matches the structure of the data to which remote changes will be considered when detecting drift. Default to the empty object which means all changes are included.
	// +kubebuilder:validation:Optional
	DriftFields *string `json:"driftFields,omitempty" tf:"drift_fields,omitempty"`

	// (String) Valid JSON object that this provider will manage with the API server.
	// Set this to 'true' to use the data as drift fields to make only explicitly set fields are checked for drift. Default: false
	// +kubebuilder:validation:Optional
	DriftFieldsFromData *bool `json:"driftFieldsFromData,omitempty" tf:"drift_fields_from_data,omitempty"`

	// (List of String) Any changes to these values will result in recreating the resource instead of updating.
	// Any changes to these values will result in recreating the resource instead of updating.
	// +kubebuilder:validation:Optional
	ForceNew []*string `json:"forceNew,omitempty" tf:"force_new,omitempty"`

	// resource override of id_attribute (see id_attribute provider config documentation)
	// Defaults to `id_attribute` set on the provider. Allows per-resource override of `id_attribute` (see `id_attribute` provider config documentation)
	// +kubebuilder:validation:Optional
	IDAttribute *string `json:"idAttribute,omitempty" tf:"id_attribute,omitempty"`

	// Set this to 'true' to ignore any remote changes. Default: false
	// +kubebuilder:validation:Optional
	IgnoreAllServerChanges *bool `json:"ignoreAllServerChanges,omitempty" tf:"ignore_all_server_changes,omitempty"`

	// A list of fields to which remote changes will be ignored. To ignore changes to nested fields, use the dot syntax: 'metadata.timestamp'
	// +kubebuilder:validation:Optional
	IgnoreChangesTo []*string `json:"ignoreChangesTo,omitempty" tf:"ignore_changes_to,omitempty"`

	// (String) Defaults to the id learned by the provider during normal operations and id_attribute. Allows you to set the id manually. This is used in conjunction with the *_path attributes.
	// Defaults to the id learned by the provider during normal operations and `id_attribute`. Allows you to set the id manually. This is used in conjunction with the `*_path` attributes.
	// +kubebuilder:validation:Optional
	ObjectID *string `json:"objectId,omitempty" tf:"object_id,omitempty"`

	// (String) The API path on top of the base URL set in the provider that represents objects of this type on the API server.
	// The API path on top of the base URL set in the provider that represents objects of this type on the API server.
	// +kubebuilder:validation:Optional
	Path *string `json:"path,omitempty" tf:"path,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	// +kubebuilder:validation:Optional
	QueryString *string `json:"queryString,omitempty" tf:"query_string,omitempty"`

	// resource override of read_method (see read_method provider config documentation)
	// Defaults to `read_method` set on the provider. Allows per-resource override of `read_method` (see `read_method` provider config documentation)
	// +kubebuilder:validation:Optional
	ReadMethod *string `json:"readMethod,omitempty" tf:"read_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to READ (GET) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to READ (GET) objects of this type on the API server.
	// +kubebuilder:validation:Optional
	ReadPath *string `json:"readPath,omitempty" tf:"read_path,omitempty"`

	// (String) Query string to be included in the path
	// Query string to be included in the path
	// +kubebuilder:validation:Optional
	ReadQueryString *string `json:"readQueryString,omitempty" tf:"read_query_string,omitempty"`

	// (Map of String) Custom search for read_path. This map will take search_key, search_value, results_key and query_string (see datasource config documentation)
	// Custom search for `read_path`. This map will take `search_key`, `search_value`, `results_key` and `query_string` (see datasource config documentation)
	// +kubebuilder:validation:Optional
	ReadSearch map[string]*string `json:"readSearch,omitempty" tf:"read_search,omitempty"`

	// (String) Valid JSON object to pass during to update requests.
	// Valid JSON object to pass during to update requests.
	// +kubebuilder:validation:Optional
	UpdateData *string `json:"updateData,omitempty" tf:"update_data,omitempty"`

	// resource override of update_method (see update_method provider config documentation)
	// Defaults to `update_method` set on the provider. Allows per-resource override of `update_method` (see `update_method` provider config documentation)
	// +kubebuilder:validation:Optional
	UpdateMethod *string `json:"updateMethod,omitempty" tf:"update_method,omitempty"`

	// (String) Defaults to path/{id}. The API path that represents where to UPDATE (PUT) objects of this type on the API server.
	// Defaults to `path/{id}`. The API path that represents where to UPDATE (PUT) objects of this type on the API server.
	// +kubebuilder:validation:Optional
	UpdatePath *string `json:"updatePath,omitempty" tf:"update_path,omitempty"`

	// (String) Query string to be included in the path when updating the resource.
	// Query string to be included in the path
	// +kubebuilder:validation:Optional
	UpdateQueryString *string `json:"updateQueryString,omitempty" tf:"update_query_string,omitempty"`
}

// ObjectSpec defines the desired state of Object
type ObjectSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ObjectParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ObjectInitParameters `json:"initProvider,omitempty"`
}

// ObjectStatus defines the observed state of Object.
type ObjectStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ObjectObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Object is the Schema for the Objects API. Acting as a wrapper of cURL, this object supports POST, GET, PUT and DELETE on the specified url
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,restapi}
type Object struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.data) || has(self.initProvider.data)",message="data is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.path) || has(self.initProvider.path)",message="path is a required parameter"
	Spec   ObjectSpec   `json:"spec"`
	Status ObjectStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ObjectList contains a list of Objects
type ObjectList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Object `json:"items"`
}

// Repository type metadata.
var (
	Object_Kind             = "Object"
	Object_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Object_Kind}.String()
	Object_KindAPIVersion   = Object_Kind + "." + CRDGroupVersion.String()
	Object_GroupVersionKind = CRDGroupVersion.WithKind(Object_Kind)
)

func init() {
	SchemeBuilder.Register(&Object{}, &ObjectList{})
}
